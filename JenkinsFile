pipeline {
    agent any

    environment {
    		DOCKERHUB_CREDENTIALS=credentials('dock')
    	}

    stages {
        stage('Code Recuperation') {
            steps {
                checkout scm
            }
        }

        stage('Remove old release') {
            steps {               
                sh 'mvn clean'
            }
        }

        stage('Compiling') {
            steps {               
                sh 'mvn compile'
            }
        } 

 stage('Code quality test') {
            steps { 
                script {
                    sh 'chmod +x ./mvnw'
                }
                withSonarQubeEnv(installationName: 'sonar') {
                    sh './mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:3.8.0.2131:sonar'
                }
            }
        } 
 stage('Unit testing') {
            steps {               
                sh 'mvn test'
            }
        }

 stage('Deployment on nexus'){
            steps {
                sh "mvn deploy -Dmaven.test.skip=true"
            }
       }
       
stage(' NETWORK Scan ') {
            steps {
        sh 'nmap  192.168.33.10 > scan_results.txt1 '
    }
       }
stage('  Nikto Scan ') {
            steps {
        sh 'nikto -h 192.168.33.10 -p 8080 > niktotests.txt1'
    }
       }
 stage("Trivy test infra "){
                    steps {
                        sh 'trivy --timeout 30m0s image sonarqube  > sonar.txt1'
                        sh 'trivy --timeout 30m0s image sonatype/nexus3  > nexus.txt1 ' 
                    }
                }  
stage('Grafana Dashboard') {
            steps {
                sh 'docker start c04bf26cb56'
                
            }

        } 
}
}
